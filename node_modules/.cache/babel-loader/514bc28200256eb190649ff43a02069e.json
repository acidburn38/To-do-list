{"ast":null,"code":"var _jsxFileName = \"/Users/Laure/Desktop/React/to-do-list/src/components/App.js\";\nimport React from 'react';\nimport NavBar from './NavBar';\nimport ToDoList from './ToDoList';\nimport AddTask from './AddTask';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport initialData from '../initialData';\nimport uniqueid from 'uniqueid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      tasks: initialData\n    };\n\n    this.onToggleCompleted = taskId => {\n      let taskToUpdate = this.state.tasks.find(task => task.id === taskId);\n      taskToUpdate.completed = !taskToUpdate.completed;\n      this.setState(prevState => prevState.tasks.map(task => {\n        return task.id === taskId ? taskToUpdate : task;\n      }));\n    };\n\n    this.onAddTask = newTaskName => {\n      let newTask = {\n        id: uniqueid(),\n        name: newTaskName,\n        completed: false\n      };\n      this.setState(prevState => ({\n        tasks: [...prevState.tasks, newTask]\n      }));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"todo\",\n      children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n        children: [/*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/add-task\",\n            render: props => /*#__PURE__*/_jsxDEV(AddTask, { ...props,\n              onAddTask: this.onAddTask\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 68\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/:filter?\",\n            render: props => /*#__PURE__*/_jsxDEV(ToDoList, { ...props,\n              tasks: this.state.tasks,\n              onToggleCompleted: this.onToggleCompleted\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 68\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Laure/Desktop/React/to-do-list/src/components/App.js"],"names":["React","NavBar","ToDoList","AddTask","BrowserRouter","Switch","Route","initialData","uniqueid","App","Component","state","tasks","onToggleCompleted","taskId","taskToUpdate","find","task","id","completed","setState","prevState","map","onAddTask","newTaskName","newTask","name","render","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,aAAR,EAAuBC,MAAvB,EAA+BC,KAA/B,QAA2C,kBAA3C;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,QAAP,MAAqB,UAArB;;;AAEA,MAAMC,GAAN,SAAkBT,KAAK,CAACU,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAE7BC,KAF6B,GAErB;AACJC,MAAAA,KAAK,EAAEL;AADH,KAFqB;;AAAA,SAM7BM,iBAN6B,GAMRC,MAAD,IAAY;AAC5B,UAAIC,YAAY,GAAG,KAAKJ,KAAL,CAAWC,KAAX,CAAiBI,IAAjB,CAAsBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYJ,MAA1C,CAAnB;AACAC,MAAAA,YAAY,CAACI,SAAb,GAAyB,CAACJ,YAAY,CAACI,SAAvC;AAEA,WAAKC,QAAL,CAAcC,SAAS,IACnBA,SAAS,CAACT,KAAV,CAAgBU,GAAhB,CAAoBL,IAAI,IAAI;AACxB,eAAOA,IAAI,CAACC,EAAL,KAAYJ,MAAZ,GAAsBC,YAAtB,GAAqCE,IAA5C;AACH,OAFD,CADJ;AAKH,KAf4B;;AAAA,SAiB7BM,SAjB6B,GAiBhBC,WAAD,IAAiB;AACzB,UAAIC,OAAO,GAAG;AACVP,QAAAA,EAAE,EAAEV,QAAQ,EADF;AAEVkB,QAAAA,IAAI,EAAEF,WAFI;AAGVL,QAAAA,SAAS,EAAE;AAHD,OAAd;AAMA,WAAKC,QAAL,CAAcC,SAAS,KAAK;AACxBT,QAAAA,KAAK,EAAE,CAAC,GAAGS,SAAS,CAACT,KAAd,EAAqBa,OAArB;AADiB,OAAL,CAAvB;AAGH,KA3B4B;AAAA;;AAgC7BE,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAS,MAAA,EAAE,EAAC,MAAZ;AAAA,6BACI,QAAC,aAAD;AAAA,gCACI,QAAC,MAAD;AAAA,kCACI,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,WAAZ;AAAwB,YAAA,MAAM,EAAGC,KAAD,iBAAW,QAAC,OAAD,OAAaA,KAAb;AAAoB,cAAA,SAAS,EAAE,KAAKL;AAApC;AAAA;AAAA;AAAA;AAAA;AAA3C;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,WAAZ;AAAwB,YAAA,MAAM,EAAGK,KAAD,iBAAW,QAAC,QAAD,OAAcA,KAAd;AAAqB,cAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWC,KAAvC;AAA8C,cAAA,iBAAiB,EAAE,KAAKC;AAAtE;AAAA;AAAA;AAAA;AAAA;AAA3C;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AA5C4B;;AA+CjC,eAAeJ,GAAf","sourcesContent":["import React from 'react'\nimport NavBar from './NavBar'\nimport ToDoList from './ToDoList'\nimport AddTask from './AddTask'\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport initialData from '../initialData'\nimport uniqueid from 'uniqueid'\n\nclass App extends React.Component{\n\n    state = {\n        tasks: initialData\n    }\n\n    onToggleCompleted = (taskId) => {\n        let taskToUpdate = this.state.tasks.find(task => task.id === taskId)\n        taskToUpdate.completed = !taskToUpdate.completed\n\n        this.setState(prevState => (\n            prevState.tasks.map(task => {\n                return task.id === taskId ?  taskToUpdate : task\n            })\n        ))\n    }\n\n    onAddTask = (newTaskName) => {\n        let newTask = {\n            id: uniqueid(),\n            name: newTaskName,\n            completed: false\n        }\n\n        this.setState(prevState => ({\n            tasks: [...prevState.tasks, newTask]\n        }))\n    }\n\n\n\n\n    render(){\n        return(\n            <section id=\"todo\">\n                <BrowserRouter>\n                    <Switch>\n                        <Route path=\"/add-task\" render={(props) => <AddTask {...props} onAddTask={this.onAddTask} />} />\n                        <Route path=\"/:filter?\" render={(props) => <ToDoList {...props} tasks={this.state.tasks} onToggleCompleted={this.onToggleCompleted} />} />\n                    </Switch>\n                    <NavBar />\n                </BrowserRouter>\n            </section>\n        )\n    }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}