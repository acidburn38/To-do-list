{"ast":null,"code":"var _jsxFileName = \"/Users/Laure/Desktop/React/to-do-list/src/components/ToDoList.js\";\nimport React from 'react';\nimport ToDo from './ToDo';\n\nconst ToDoList = _ref => {\n  let {\n    tasks,\n    match,\n    onToggleCompleted\n  } = _ref;\n  let filteredTasks;\n\n  switch (match.params.filter) {\n    case 'completed':\n      filteredTasks = tasks.filter(task => task.completed);\n      break;\n\n    default:\n      filteredTasks = tasks;\n  }\n\n  if (filteredTasks.length === 0) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"m-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }\n    }, \"Liste de t\\xE2ches\"), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-group m-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }\n    }, \"Aucune t\\xE2che \\xE0 afficher\")));\n  } else {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"m-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, \"To do list\"), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-group m-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, filteredTasks.map(task => /*#__PURE__*/React.createElement(ToDo, {\n      task: task,\n      key: task.id,\n      onToggleCompleted: onToggleCompleted,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 53\n      }\n    }))));\n  }\n};\n\n_c = ToDoList;\nexport default ToDoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"sources":["/Users/Laure/Desktop/React/to-do-list/src/components/ToDoList.js"],"names":["React","ToDo","ToDoList","tasks","match","onToggleCompleted","filteredTasks","params","filter","task","completed","length","map","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,QAAQ,GAAG,QAAuC;AAAA,MAAtC;AAACC,IAAAA,KAAD;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAsC;AACpD,MAAIC,aAAJ;;AAEA,UAAQF,KAAK,CAACG,MAAN,CAAaC,MAArB;AACI,SAAK,WAAL;AACIF,MAAAA,aAAa,GAAGH,KAAK,CAACK,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,SAA1B,CAAhB;AACJ;;AACA;AACIJ,MAAAA,aAAa,GAAGH,KAAhB;AALR;;AAQA,MAAGG,aAAa,CAACK,MAAd,KAAyB,CAA5B,EAA8B;AAC1B,wBACI,uDACI;AAAI,MAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI;AAAI,MAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADJ,CAFJ,CADJ;AAQH,GATD,MASO;AACH,wBACI,uDACI;AAAI,MAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAI,MAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQL,aAAa,CAACM,GAAd,CAAmBH,IAAD,iBAAU,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,IAAZ;AAAkB,MAAA,GAAG,EAAEA,IAAI,CAACI,EAA5B;AAAgC,MAAA,iBAAiB,EAAER,iBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5B,CAFR,CAFJ,CADJ;AAUH;AACJ,CAhCD;;KAAMH,Q;AAkCN,eAAeA,QAAf","sourcesContent":["import React from 'react'\nimport ToDo from './ToDo'\n\nconst ToDoList = ({tasks, match, onToggleCompleted}) => {\n    let filteredTasks\n\n    switch (match.params.filter){\n        case 'completed':\n            filteredTasks = tasks.filter(task => task.completed)\n        break;\n        default: \n            filteredTasks = tasks\n    }\n\n    if(filteredTasks.length === 0){\n        return (\n            <>\n                <h1 className=\"m-3\">Liste de tâches</h1>\n                <ul className=\"list-group m-3\">\n                    <li className=\"list-group-item\">Aucune tâche à afficher</li>\n                </ul>\n            </>\n        )\n    } else {\n        return (\n            <>\n                <h1 className=\"m-3\">To do list</h1>\n                <ul className=\"list-group m-3\">\n                    {\n                        filteredTasks.map((task) => <ToDo task={task} key={task.id} onToggleCompleted={onToggleCompleted} />)\n                    }\n                </ul>\n            </>\n        )\n    }  \n}\n\nexport default ToDoList"]},"metadata":{},"sourceType":"module"}